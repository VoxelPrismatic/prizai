@bot.command()
@commands.is_owner()
async def rld(ctx, *name):
    await log('COG', 'Reloading cog(s)')
    try:
        if not len(name):
            for com in owncom: rext(f'com.own.{com}')
            for com in modcom: rext(f'com.mod.{com}')
            for com in infcom: rext(f'com.inf.{com}')
            for com in pubcom: rext(f'com.pub.{com}')
            for com in mathcom: rext(f'com.math.{com}')
            for lis in list_n: rext(f'lis.{lis}')
        else: rext(name[0])
        await log('COG', 'Cog(s) successfully reloaded')
        await ctx.message.add_reaction('ðŸ‘Œ')
    except commands.ExtensionAlreadyLoaded: await ctx.send('```diff\n-] The extensions are already loaded xd```')
    except commands.ExtensionNotLoaded: await ctx.send('```diff\n-] The extensions are already unloaded xd```')
    except commands.ExtensionError: await ctx.send('```diff\n-] An error occured, check for syntax errors```')

@bot.command()
@commands.is_owner()
async def ld(ctx, *name):
    await log('COG', 'Loading cog(s)')
    try:
        if not len(name):
            for com in owncom: lext(f'com.own.{com}')
            for com in modcom: lext(f'com.mod.{com}')
            for com in infcom: lext(f'com.inf.{com}')
            for com in pubcom: lext(f'com.pub.{com}')
            for com in mathcom: lext(f'com.math.{com}')
            for lis in list_n: lext(f'lis.{lis}')
        else: lext(name[0])
        await log('COG', 'Cog(s) successfully loaded')
        await ctx.message.add_reaction('ðŸ‘Œ')
    except commands.ExtensionAlreadyLoaded: await ctx.send('```diff\n-] The extensions are already loaded xd```')
    except commands.ExtensionNotLoaded: await ctx.send('```diff\n-] The extensions are already unloaded xd```')
    except commands.ExtensionError: await ctx.send('```diff\n-] An error occured, check for syntax errors```')

@bot.command()
@commands.is_owner()
async def uld(ctx, *name):
    await log('COG', 'Unloading cog(s)')
    try:
        if not len(name):
            for com in owncom: uext(f'com.own.{com}')
            for com in modcom: uext(f'com.mod.{com}')
            for com in infcom: uext(f'com.inf.{com}')
            for com in pubcom: uext(f'com.pub.{com}')
            for com in mathcom: uext(f'com.math.{com}')
            for lis in list_n: uext(f'lis.{lis}')
        else: uext(name[0])
        await log('COG', 'Cog(s) successfully unloaded')
        await ctx.message.add_reaction('ðŸ‘Œ')
    except commands.ExtensionAlreadyLoaded: await ctx.send('```diff\n-] The extensions are already loaded xd```')
    except commands.ExtensionNotLoaded: await ctx.send('```diff\n-] The extensions are already unloaded xd```')
    except commands.ExtensionError: await ctx.send('```diff\n-] An error occured, check for syntax errors```')
