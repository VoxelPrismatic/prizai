
    @commands.command()
    @owner_only()
    async def exec(self, ctx, *, code:str):
        """Evaluates your (shitty) Python code."""
        code = code.strip('` \n')
        code = code.replace('py', '')
        code = code.replace('Python', '')
        print(textwrap.indent(code, '    '))
        diff = '`diff\n{}\n`'
        result = None

        env = {
            'self': self,
            'bot': self.bot,
            'ctx': ctx,
            'message': ctx.message,
            'guild': ctx.message.guild,
            'channel': ctx.message.channel,
            'author': ctx.message.author
        }

        env.update(globals())
        stdout = io.StringIO()
        try:
            start = time.monotonic()
            result = exec('async def func():\n'+ textwrap.indent(code, '    '), env)
            func = env['func']
            with redirect_stdout(stdout):
                ret = await func()
            exec_time = time.monotonic() - start
            value = stdout.getvalue()
            await ctx.send(diff.format(value + "\n" + f"+ Returned '{ret}' in ~{1000 * exec_time:,.2f}ms."))
        except Exception as e:
            await ctx.send(diff.format(type(e).__name__ + ':\n' + str(e)))
            return
